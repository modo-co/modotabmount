name: Manual SFTP Diagnostics

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release tag (e.g., 1.1.0)'
        required: true
        default: 'diagnostic'

permissions:
  contents: read

jobs:
  diagnostics:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      SFTP_HOST: ${{ secrets.SFTP_HOST }}
      SFTP_USER: ${{ secrets.SFTP_USER }}
      SFTP_PASS: ${{ secrets.SFTP_PASS }}
    steps:
      - name: Prepare release variables
        run: |
          echo "RELEASE_VERSION=${{ inputs.release_version }}" >> $GITHUB_ENV
          echo "RELEASE_BASE_URL=https://modotabmount.modoco.io/firmware/${{ inputs.release_version }}/" >> $GITHUB_ENV
          echo "WROTE to GITHUB_ENV"

      - name: Show runner and shell info
        run: |
          echo "===== TIMESTAMP ====="
          date -u
          echo "===== SHELL ====="
          echo "$SHELL"
          echo "===== WHOAMI & PWD ====="
          whoami
          pwd
          echo "===== ENV: ACTIONS_RUNNER_DEBUG (if present) ====="
          env | sed -n '1,200p' | grep -E 'GITHUB|RELEASE|SFTP|HOME' || true
          echo "===== GITHUB_ENV contents ====="
          if [ -f "$GITHUB_ENV" ]; then
            sed -n '1,200p' "$GITHUB_ENV" || true
          else
            echo "No GITHUB_ENV file found"
          fi

      - name: Show filesystem root & workspace
        run: |
          echo "----- / -----"
          ls -lah /
          echo "----- workspace -----"
          ls -lah $GITHUB_WORKSPACE || true

      - name: Install minimal tools with verbose output
        run: |
          set -x
          sudo apt-get update -y
          sudo apt-get install -y --no-install-recommends lftp jq openssh-client
          lftp --version || true
          ssh -V || true

      - name: Debug: list files in workspace (explicit)
        run: |
          set -x
          echo "Printing simple ls -lah:"
          ls -lah
          echo "Printing free/df/output:"
          df -h .

      - name: Create small test file
        run: |
          echo "diagnostic test" > small-test-file.txt
          echo "file size:"
          ls -lh small-test-file.txt

      - name: Attempt SFTP upload of small file (verbose)
        run: |
          set -x
          if [ -z "$SFTP_HOST" ] || [ -z "$SFTP_USER" ] || [ -z "$SFTP_PASS" ]; then
            echo "One or more SFTP secrets are empty!"
            exit 2
          fi

          CMDFILE=./lftp_test_cmds.txt
          cat > "$CMDFILE" <<LFTPC
set ftp:trace 3
set sftp:debug 5
set xfer:log 1
set xfer:log-file /dev/stdout
cd public_html/modotabmount/firmware || true
mkdir diagnostic_test || true
cd diagnostic_test || true
put small-test-file.txt
bye
LFTPC

          echo "----- lftp command file -----"
          sed -n '1,200p' $CMDFILE
          echo "Running lftp..."
          lftp -u "$SFTP_USER","$SFTP_PASS" sftp://$SFTP_HOST -f $CMDFILE

      - name: Final debug echo
        run: |
          echo "Diagnostics finished"
