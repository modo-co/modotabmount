name: Manual SFTP Upload

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release tag (e.g., 1.1.0)'
        required: true
        default: 'latest'

permissions:
  contents: read

jobs:
  upload-to-sftp:
    name: Upload assets to SFTP (manual)
    runs-on: ubuntu-latest
    env:
      SFTP_HOST: ${{ secrets.SFTP_HOST }}
      SFTP_USER: ${{ secrets.SFTP_USER }}
      SFTP_PASS: ${{ secrets.SFTP_PASS }}
      RELEASE_REPO: modo-co/modotabmount
    steps:
      - name: Prepare release variables
        run: |
          echo "RELEASE_VERSION=${{ inputs.release_version }}" >> $GITHUB_ENV
          echo "RELEASE_BASE_URL=https://modotabmount.modoco.io/firmware/${{ inputs.release_version }}/" >> $GITHUB_ENV

      - name: Download all release assets
        run: |
          # variables available via $RELEASE_VERSION and $RELEASE_REPO
          curl -fL -o modotabmount-esp32c3.elf "https://github.com/${RELEASE_REPO}/releases/download/${RELEASE_VERSION}/modotabmount-esp32c3.elf" || true
          curl -fL -o modotabmount-esp32c3.elf.md5 "https://github.com/${RELEASE_REPO}/releases/download/${RELEASE_VERSION}/modotabmount-esp32c3.elf.md5" || true
          curl -fL -o modotabmount-esp32c3.elf.sha256 "https://github.com/${RELEASE_REPO}/releases/download/${RELEASE_VERSION}/modotabmount-esp32c3.elf.sha256" || true
          curl -fL -o modotabmount-esp32c3.factory.bin "https://github.com/${RELEASE_REPO}/releases/download/${RELEASE_VERSION}/modotabmount-esp32c3.factory.bin" || true
          curl -fL -o modotabmount-esp32c3.factory.bin.md5 "https://github.com/${RELEASE_REPO}/releases/download/${RELEASE_VERSION}/modotabmount-esp32c3.factory.bin.md5" || true
          curl -fL -o modotabmount-esp32c3.factory.bin.sha256 "https://github.com/${RELEASE_REPO}/releases/download/${RELEASE_VERSION}/modotabmount-esp32c3.factory.bin.sha256" || true
          curl -fL -o modotabmount-esp32c3.ota.bin "https://github.com/${RELEASE_REPO}/releases/download/${RELEASE_VERSION}/modotabmount-esp32c3.ota.bin" || true
          curl -fL -o modotabmount-esp32c3.ota.bin.md5 "https://github.com/${RELEASE_REPO}/releases/download/${RELEASE_VERSION}/modotabmount-esp32c3.ota.bin.md5" || true
          curl -fL -o modotabmount-esp32c3.ota.bin.sha256 "https://github.com/${RELEASE_REPO}/releases/download/${RELEASE_VERSION}/modotabmount-esp32c3.ota.bin.sha256" || true
          curl -fL -o modotabmount.manifest.json "https://github.com/${RELEASE_REPO}/releases/download/${RELEASE_VERSION}/modotabmount.manifest.json" || true

      - name: Install jq and lftp
        run: sudo apt-get update && sudo apt-get install -y jq lftp

      - name: Update manifest paths for your site
        run: |
          # update manifest to point ota/parts paths at your site; keep release_url unchanged
          jq --arg url "${RELEASE_BASE_URL}" '
            if (.builds | length) > 0 then
              (.builds[] | select(.ota)?).ota.path = ($url + "modotabmount-esp32c3.ota.bin") |
              (.builds[] | select(.parts)?).parts[0].path = ($url + "modotabmount-esp32c3.factory.bin")
            else
              .
            end
          ' modotabmount.manifest.json > modotabmount.manifest.json.tmp && mv modotabmount.manifest.json.tmp modotabmount.manifest.json || true
          echo "Updated manifest content:"
          cat modotabmount.manifest.json || true

      - name: Debug: List downloaded files
        run: ls -lah

      - name: Upload all assets via SFTP (versioned, debug enabled)
        run: |
          # use lftp with verbose settings to show connection and transfer logs
          lftp -u "$SFTP_USER","$SFTP_PASS" sftp://$SFTP_HOST <<'LFTPEOF'
          set ftp:trace 3
          set sftp:debug 5
          set xfer:log 1
          set xfer:log-file /dev/stdout
          cd public_html/modotabmount/firmware
          mkdir ${RELEASE_VERSION} || true
          cd ${RELEASE_VERSION}
          # upload if file exists locally
          if [ -f "modotabmount-esp32c3.elf" ]; then put modotabmount-esp32c3.elf; fi
          if [ -f "modotabmount-esp32c3.elf.md5" ]; then put modotabmount-esp32c3.elf.md5; fi
          if [ -f "modotabmount-esp32c3.elf.sha256" ]; then put modotabmount-esp32c3.elf.sha256; fi
          if [ -f "modotabmount-esp32c3.factory.bin" ]; then put modotabmount-esp32c3.factory.bin; fi
          if [ -f "modotabmount-esp32c3.factory.bin.md5" ]; then put modotabmount-esp32c3.factory.bin.md5; fi
          if [ -f "modotabmount-esp32c3.factory.bin.sha256" ]; then put modotabmount-esp32c3.factory.bin.sha256; fi
          if [ -f "modotabmount-esp32c3.ota.bin" ]; then put modotabmount-esp32c3.ota.bin; fi
          if [ -f "modotabmount-esp32c3.ota.bin.md5" ]; then put modotabmount-esp32c3.ota.bin.md5; fi
          if [ -f "modotabmount-esp32c3.ota.bin.sha256" ]; then put modotabmount-esp32c3.ota.bin.sha256; fi
          if [ -f "modotabmount.manifest.json" ]; then put modotabmount.manifest.json; fi
          bye
          LFTPEOF

      - name: Upload manifest as "latest" (debug enabled)
        run: |
          lftp -u "$SFTP_USER","$SFTP_PASS" sftp://$SFTP_HOST <<'LFTPEOF'
          set ftp:trace 3
          set sftp:debug 5
          set xfer:log 1
          set xfer:log-file /dev/stdout
          cd public_html/modotabmount/firmware
          mkdir latest || true
          cd latest
          put -O . modotabmount.manifest.json
          bye
          LFTPEOF
