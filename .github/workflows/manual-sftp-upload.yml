name: Manual SFTP Upload

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release tag (e.g., 1.1.0)'
        required: true
        default: 'latest'

permissions:
  contents: read

jobs:
  upload-to-sftp:
    name: Upload assets to SFTP (manual)
    runs-on: ubuntu-latest
    env:
      SFTP_HOST: ${{ secrets.SFTP_HOST }}
      SFTP_USER: ${{ secrets.SFTP_USER }}
      SFTP_PASS: ${{ secrets.SFTP_PASS }}
      RELEASE_REPO: modo-co/modotabmount
    steps:
      - name: Prepare release variables
        run: |
          echo "RELEASE_VERSION=${{ inputs.release_version }}" >> $GITHUB_ENV
          echo "RELEASE_BASE_URL=https://modotabmount.modoco.io/firmware/${{ inputs.release_version }}/" >> $GITHUB_ENV

      - name: Download all release assets (best-effort)
        run: |
          # variables available via $RELEASE_VERSION and $RELEASE_REPO
          curl -fL -o modotabmount-esp32c3.elf "https://github.com/${RELEASE_REPO}/releases/download/${RELEASE_VERSION}/modotabmount-esp32c3.elf" || true
          curl -fL -o modotabmount-esp32c3.elf.md5 "https://github.com/${RELEASE_REPO}/releases/download/${RELEASE_VERSION}/modotabmount-esp32c3.elf.md5" || true
          curl -fL -o modotabmount-esp32c3.elf.sha256 "https://github.com/${RELEASE_REPO}/releases/download/${RELEASE_VERSION}/modotabmount-esp32c3.elf.sha256" || true
          curl -fL -o modotabmount-esp32c3.factory.bin "https://github.com/${RELEASE_REPO}/releases/download/${RELEASE_VERSION}/modotabmount-esp32c3.factory.bin" || true
          curl -fL -o modotabmount-esp32c3.factory.bin.md5 "https://github.com/${RELEASE_REPO}/releases/download/${RELEASE_VERSION}/modotabmount-esp32c3.factory.bin.md5" || true
          curl -fL -o modotabmount-esp32c3.factory.bin.sha256 "https://github.com/${RELEASE_REPO}/releases/download/${RELEASE_VERSION}/modotabmount-esp32c3.factory.bin.sha256" || true
          curl -fL -o modotabmount-esp32c3.ota.bin "https://github.com/${RELEASE_REPO}/releases/download/${RELEASE_VERSION}/modotabmount-esp32c3.ota.bin" || true
          curl -fL -o modotabmount-esp32c3.ota.bin.md5 "https://github.com/${RELEASE_REPO}/releases/download/${RELEASE_VERSION}/modotabmount-esp32c3.ota.bin.md5" || true
          curl -fL -o modotabmount-esp32c3.ota.bin.sha256 "https://github.com/${RELEASE_REPO}/releases/download/${RELEASE_VERSION}/modotabmount-esp32c3.ota.bin.sha256" || true
          curl -fL -o modotabmount.manifest.json "https://github.com/${RELEASE_REPO}/releases/download/${RELEASE_VERSION}/modotabmount.manifest.json" || true

      - name: Install jq and lftp
        run: sudo apt-get update && sudo apt-get install -y jq lftp

      - name: Update manifest paths (point ota/parts to your site; keep release_url)
        run: |
          if [ -f modotabmount.manifest.json ]; then
            jq --arg url "${RELEASE_BASE_URL}" '
              if (.builds | length) > 0 then
                .builds = (
                  .builds | map(
                    (if has("ota") then .ota.path = ($url + "modotabmount-esp32c3.ota.bin") else . end)
                    | (if has("parts") and (.parts | length) > 0 then .parts[0].path = ($url + "modotabmount-esp32c3.factory.bin") else . end)
                  )
                )
              else .
              end
            ' modotabmount.manifest.json > modotabmount.manifest.json.tmp && mv modotabmount.manifest.json.tmp modotabmount.manifest.json
            echo "Updated manifest:"
            cat modotabmount.manifest.json
          else
            echo "No manifest downloaded; skipping manifest update"
          fi

      - name: Debug: list files and sizes
        run: ls -lah

      - name: Build lftp commands and upload assets (versioned, debug enabled)
        run: |
          CMDFILE=./lftp_cmds.txt
          # create command file with expanded RELEASE_VERSION
          cat > $CMDFILE <<LFTP_CMDS
set ftp:trace 3
set sftp:debug 5
set xfer:log 1
set xfer:log-file /dev/stdout
cd public_html/modotabmount/firmware
mkdir ${RELEASE_VERSION} || true
cd ${RELEASE_VERSION}
LFTP_CMDS

          for f in modotabmount-esp32c3.elf \
                   modotabmount-esp32c3.elf.md5 \
                   modotabmount-esp32c3.elf.sha256 \
                   modotabmount-esp32c3.factory.bin \
                   modotabmount-esp32c3.factory.bin.md5 \
                   modotabmount-esp32c3.factory.bin.sha256 \
                   modotabmount-esp32c3.ota.bin \
                   modotabmount-esp32c3.ota.bin.md5 \
                   modotabmount-esp32c3.ota.bin.sha256 \
                   modotabmount.manifest.json; do
            if [ -f "$f" ]; then
              echo "put $f" >> $CMDFILE
            else
              echo "# skipping missing $f" >> $CMDFILE
            fi
          done

          echo "bye" >> $CMDFILE

          echo "------ lftp command file ------"
          sed -n '1,200p' $CMDFILE
          echo "--------------------------------"

          # run lftp using command file
          lftp -u "$SFTP_USER","$SFTP_PASS" sftp://$SFTP_HOST -f $CMDFILE

      - name: Upload manifest to latest (debug enabled)
        run: |
          CMDFILE=./lftp_latest.txt
          cat > $CMDFILE <<LFTP_CMDS
set ftp:trace 3
set sftp:debug 5
set xfer:log 1
set xfer:log-file /dev/stdout
cd public_html/modotabmount/firmware
mkdir latest || true
cd latest
LFTP_CMDS

          if [ -f modotabmount.manifest.json ]; then
            echo "put -O . modotabmount.manifest.json" >> $CMDFILE
          else
            echo "# manifest not present, skipping put" >> $CMDFILE
          fi

          echo "bye" >> $CMDFILE
          sed -n '1,200p' $CMDFILE
          lftp -u "$SFTP_USER","$SFTP_PASS" sftp://$SFTP_HOST -f $CMDFILE
