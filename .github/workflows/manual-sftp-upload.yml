name: Upload Release Assets to FTP

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release tag (e.g., 1.9.0)'
        required: true

permissions:
  contents: read

jobs:
  upload:
    runs-on: ubuntu-latest
    env:
      SFTP_HOST: ${{ secrets.SFTP_HOST }}
      SFTP_USER: ${{ secrets.SFTP_USER }}
      SFTP_PASS: ${{ secrets.SFTP_PASS }}

    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y --no-install-recommends jq lftp curl

      - name: Download all release assets
        run: |
          set -eux
          mkdir -p release_assets
          release_id=$(curl -s "https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ inputs.release_version }}" | jq -r '.id')
          echo "Release ID: $release_id"

          curl -s "https://api.github.com/repos/${{ github.repository }}/releases/${release_id}" \
            | jq -r '.assets[].browser_download_url' \
            | while read url; do
                echo "Downloading $url"
                curl -L -O "$url"
              done

          mv ./*.bin ./*.json ./release_assets/ 2>/dev/null || true
          ls -lah release_assets

      - name: Upload release assets to versioned directory
        run: |
          set -eux
          CMDFILE=./lftp_upload.txt
          printf "%s\n" \
            "set sftp:auto-confirm yes" \
            "cd public_html/modotabmount/firmware" \
            "mkdir -p ${{ inputs.release_version }}" \
            "cd ${{ inputs.release_version }}" > "$CMDFILE"

          for f in release_assets/*; do
            printf "%s\n" "put \"$f\"" >> "$CMDFILE"
          done

          printf "%s\n" "bye" >> "$CMDFILE"
          echo "Running lftp..."
          lftp -u "$SFTP_USER","$SFTP_PASS" sftp://$SFTP_HOST -f "$CMDFILE"

      - name: Modify manifest and upload to /latest
        run: |
          set -eux
          manifest=$(find release_assets -type f -name '*.manifest.json' | head -n1)
          if [ -z "$manifest" ]; then
            echo "No manifest file found!"
            exit 1
          fi

          version="${{ inputs.release_version }}"
          tmp_manifest=./latest_manifest.json
          jq \
            --arg version "$version" \
            '.path = "https://modotabmount.modoco.io/firmware/" + $version + "/modotabmount-esp32c3.ota.bin"' \
            "$manifest" > "$tmp_manifest"

          echo "Modified manifest:"
          cat "$tmp_manifest"

          CMDFILE=./lftp_latest.txt
          printf "%s\n" \
            "set sftp:auto-confirm yes" \
            "cd public_html/modotabmount/firmware" \
            "mkdir -p latest" \
            "cd latest" \
            "put \"$tmp_manifest\" -o modotabmount.manifest.json" \
            "bye" > "$CMDFILE"

          echo "Uploading modified manifest to /latest..."
          lftp -u "$SFTP_USER","$SFTP_PASS" sftp://$SFTP_HOST -f "$CMDFILE"

      - name: Done
        run: echo "âœ… Upload completed successfully!"
